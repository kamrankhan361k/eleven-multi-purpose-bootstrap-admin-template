<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title/><link>./</link><description>Recent content on</description><generator>Hugo -- gohugo.io</generator><atom:link href="./index.xml" rel="self" type="application/rss+xml"/><item><title>Overview</title><link>./main/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>./main/</guid><description>Overview This documentation is to help you understand the template's structure. Please go through the documentation carefully to understand how this template is made and how to edit it properly. HTML, CSS, javascript and terminal/command line knowledge is required.
If you have any questions that are beyond the scope of this help file, please feel free to get in touch.
Support requests can go through the form on my Themeforest profile page or via email.</description></item><item><title>Getting Started</title><link>./quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>./quickstart/</guid><description>Installation React/NextJS ang Angular versions React ang Angular versions of the template requires Node and NPM or YARN to be installed.
Installing React prerequisites Node.js and NPM: You can download Node.js from https://nodejs.org. NPM comes bundled with Node.js
For yarn, you can find the installation instructions here.
Installing packages Before proceeding you'll need to install packages. You can do this by running npm install / yarn install from the root of your project to install all the required dependencies.</description></item><item><title>Routes</title><link>./routes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>./routes/</guid><description>Dashboard routes Link
[{ path: &amp;#34;/&amp;#34;, name: &amp;#34;Home&amp;#34;, icon: Home badge: { type: &amp;#34;danger&amp;#34;, value: &amp;#34;5&amp;#34; } }] For the React version dashboard routes are dynamically defined in /lib/routes.js. For the Angular version dashboard routes are dynamically defined in /src/app/layout/menu/menu.service.ts. For Hugo, routes are defined in /data/sidebar.json. The syntax is the same except when defining your lottie icons.
Links Where:
path - path to your route name - the text appearing in the sidebar icon - in React - icon element displayed in the sidebar, in Hugo and Angular - path to lottie animated icon badge - (optional) used to display the badge element.</description></item><item><title>Options</title><link>./options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>./options/</guid><description>Layout Options Add the following css classes to to get different layouts. In React and Angular versions these options can be toggle dynamically in components/core/AppProver.js and src/app/admin-layout/admin-layout.component.ts respectively;
.dark-mode activates the dark mode theme. .page-boxed activates boxed container. .page-sticky-header makes the main header sticky when scrolling. .page-sticky-sidebar makes the main sidebar sticky when scrolling. .page-sidebar-collapsed activates compact sidebar.</description></item><item><title>Helpers</title><link>./helpers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>./helpers/</guid><description>React .Prop Types The template comes with a myriad of css helper classes which can be found in /lib/globalStyles.js.
These are all the available helper classes used in the template
ActivityStream ActivityStream.propTypes = { stream: PropTypes.arrayOf( PropTypes.shape({ title: PropTypes.string, subtitle: PropTypes.string, avatar: PropTypes.string, body: PropTypes.string }) ).isRequired }; AnimatedIcon AnimatedIcon.propTypes = { animationData: PropTypes.object.isRequired, size: PropTypes.number.isRequired, isStopped: PropTypes.bool }; Avatar Avatar.propTypes = { src: PropTypes.string, alt: PropTypes.string, size: PropTypes.number.isRequired, status: PropTypes.</description></item><item><title>Helpers</title><link>./icons/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>./icons/</guid><description>Icons React import your lottie animated icon object from public/animated-icons/ and use with AnimatedIcon component
Import
import FullScreen from &amp;#34;../../public/animated-icons/fullscreen/fullscreen.json&amp;#34;; Usage
&amp;lt;AnimatedIcon animationData={FullScreen} size={24} isStopped={true} /&amp;gt; HTML import your lottie animated icon object from public/animated-icons/ and use it on a div with a data-animation-path attribute
Usage
&amp;lt;div style=&amp;#34;width:24px;height:24px&amp;#34; data-animation-path=&amp;#34;animated-icons/fullscreen/fullscreen.json&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; Lottie icons need to be accessed from a server http:// or https://, when running template files on file:// icons wont render.</description></item><item><title>Credits</title><link>./thirdparty/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>./thirdparty/</guid><description>Official Docs React Component Official link Bootstrap https://getbootstrap.com/ Next.js https://nextjs.org Reactstrap https://reactstrap.github.io/ Lottie React Web https://github.com/felippenardi/lottie-react-web React ChartJS https://github.com/jerairrest/react-chartjs-2 React Big Calendar https://github.com/intljusticemission/react-big-calendar React Quill https://github.com/zenoamaro/react-quill Simple React Validator https://github.com/dockwa/simple-react-validator React Image https://github.com/mbrevda/react-image React noSSR https://github.com/kadirahq/react-no-ssr React map gl https://github.com/uber/react-map-gl React beautiful dnd https://github.</description></item><item><title>Download structure</title><link>./structure/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>./structure/</guid><description>Download structure . ├── html │ ├── 404.html │ ├── 500.html │ ├── bootstrap-ui-alerts.html │ ├── bootstrap-ui-badge.html │ ├── bootstrap-ui-buttons.html │ ├── bootstrap-ui-card.html │ ├── bootstrap-ui-carousel.html │ ├── bootstrap-ui-jumbotron.html │ ├── bootstrap-ui-list-group.html │ ├── bootstrap-ui-modals.html │ ├── bootstrap-ui-other.html │ ├── bootstrap-ui-progress.html │ ├── calendar.html │ ├── charts.html │ ├── css │ │ └── app.css │ ├── forgot.html │ ├── form-basic-form.html │ ├── form-editor.html │ ├── form-validation.html │ ├── images │ │ ├── 256x186.</description></item></channel></rss>